{"ast":null,"code":"var _jsxFileName = \"/Users/carolina/REACT/Exerci\\u0301cio 2/ex2-countries-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { getCountries } from \"./store/countrySlice\";\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport SelectedCountries from \"./components/SelectedCountries\"; // const regions: Region[] = [\n//   { value: \"Africa\" },\n//   { value: \"Americas\" },\n//   { value: \"Asia\" },\n//   { value: \"Europe\" },\n//   { value: \"Oceania\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    countriesList,\n    loading,\n    error\n  } = useFetch(\"https://restcountries.com/v2/all/\");\n  const dispatch = useDispatch();\n  dispatch(getCountries(countriesList)); //const [selectedRegion, setSelectedRegion] = useState(\"\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Countries App \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading data... Please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ops...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"selection\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Please select a region of the globe ...\",\n            options: regions,\n            defaultMenuIsOpen: true,\n            getOptionLabel: regions => regions.value,\n            onChange: opt => {\n              if (opt != null) {\n                setSelectedRegion(opt.value);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), selectedRegion && /*#__PURE__*/_jsxDEV(Countries, {\n          selectedRegion: selectedRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectedCountries, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"/llr9/XmM5avH2D7aKgBNCQ5EuM=\", false, function () {\n  return [useFetch, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","useFetch","getCountries","Countries","SelectedCountries","App","countriesList","loading","error","dispatch","regions","value","opt","setSelectedRegion","selectedRegion"],"sources":["/Users/carolina/REACT/Exercício 2/ex2-countries-app/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Region } from \"../src/types\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { getCountries } from \"./store/countrySlice\";\n\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport SelectedCountries from \"./components/SelectedCountries\";\n\n// const regions: Region[] = [\n//   { value: \"Africa\" },\n//   { value: \"Americas\" },\n//   { value: \"Asia\" },\n//   { value: \"Europe\" },\n//   { value: \"Oceania\" },\n// ];\n\nconst App: React.FC = () => {\n  const { countriesList, loading, error } = useFetch(\n    \"https://restcountries.com/v2/all/\"\n  );\n\n  const dispatch = useDispatch();\n  dispatch(getCountries(countriesList));\n\n  //const [selectedRegion, setSelectedRegion] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Countries App </p>\n        </header>\n        <div className=\"container\">\n          {loading && <p>Loading data... Please wait</p>}\n          {error && <p>Ops...</p>}\n          <section className=\"selection\">\n            <Select\n              placeholder={\"Please select a region of the globe ...\"}\n              options={regions}\n              defaultMenuIsOpen={true}\n              getOptionLabel={(regions) => regions.value}\n              onChange={(opt) => {\n                if (opt != null) {\n                  setSelectedRegion(opt.value);\n                }\n              }}\n            />\n          </section>\n          {selectedRegion && <Countries selectedRegion={selectedRegion} />}\n        </div>\n        <SelectedCountries />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAAEC,aAAF;IAAiBC,OAAjB;IAA0BC;EAA1B,IAAoCP,QAAQ,CAChD,mCADgD,CAAlD;EAIA,MAAMQ,QAAQ,GAAGT,WAAW,EAA5B;EACAS,QAAQ,CAACP,YAAY,CAACI,aAAD,CAAb,CAAR,CAN0B,CAQ1B;;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,WAAf;QAAA,WACGC,OAAO,iBAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADd,EAEGC,KAAK,iBAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFZ,eAGE;UAAS,SAAS,EAAC,WAAnB;UAAA,uBACE,QAAC,MAAD;YACE,WAAW,EAAE,yCADf;YAEE,OAAO,EAAEE,OAFX;YAGE,iBAAiB,EAAE,IAHrB;YAIE,cAAc,EAAGA,OAAD,IAAaA,OAAO,CAACC,KAJvC;YAKE,QAAQ,EAAGC,GAAD,IAAS;cACjB,IAAIA,GAAG,IAAI,IAAX,EAAiB;gBACfC,iBAAiB,CAACD,GAAG,CAACD,KAAL,CAAjB;cACD;YACF;UATH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAHF,EAgBGG,cAAc,iBAAI,QAAC,SAAD;UAAW,cAAc,EAAEA;QAA3B;UAAA;UAAA;UAAA;QAAA,QAhBrB;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAsBE,QAAC,iBAAD;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA4BD,CAtCD;;GAAMT,G;UACsCJ,Q,EAIzBD,W;;;KALbK,G;AAwCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}