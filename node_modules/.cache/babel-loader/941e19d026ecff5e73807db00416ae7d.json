{"ast":null,"code":"var _jsxFileName = \"/Users/carolina/REACT/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, Provider } from \"react-redux\";\nimport Select from \"react-select\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { getCountries } from \"./store/countrySlice\";\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport SelectedCountries from \"./components/SelectedCountries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regions = [{\n  value: \"Africa\"\n}, {\n  value: \"Americas\"\n}, {\n  value: \"Asia\"\n}, {\n  value: \"Europe\"\n}, {\n  value: \"Oceania\"\n}];\n\nconst App = () => {\n  _s();\n\n  const {\n    countriesList,\n    loading,\n    error\n  } = useFetch(\"https://restcountries.com/v2/all/\");\n  const dispatch = useDispatch();\n  dispatch(getCountries(countriesList));\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  console.log(selectedRegion);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Countries App \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data... Please wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ops...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"selection\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Please select a region of the globe ...\",\n          options: regions,\n          defaultMenuIsOpen: true,\n          getOptionLabel: regions => regions.value,\n          onChange: opt => setSelectedRegion(opt.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), selectedRegion && /*#__PURE__*/_jsxDEV(Countries, {\n        selectedRegion: selectedRegion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(SelectedCountries, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"NbNvMtU12T9rDqLtW4CwTl+nRZg=\", false, function () {\n  return [useFetch, useDispatch];\n});\n\n_c = App;\nexport default App; // function App() {\n//   const [selectedRegion, setSelectedRegion] = useState(\"\");\n//   console.log(selectedRegion);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p>Countries App </p>\n//       </header>\n//       <section className=\"selection\">\n//         <Select\n//           placeholder={\"Please select a region of the globe ...\"}\n//           options={regions}\n//           defaultMenuIsOpen={true}\n//           getOptionLabel={(regions) => regions.value}\n//           onChange={(opt) => setSelectedRegion(opt.value)}\n//         />\n//       </section>\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useDispatch","Provider","Select","useFetch","getCountries","Countries","SelectedCountries","regions","value","App","countriesList","loading","error","dispatch","selectedRegion","setSelectedRegion","console","log","store","opt"],"sources":["/Users/carolina/REACT/my-app/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, Provider } from \"react-redux\";\nimport Select from \"react-select\";\nimport { Region } from \"../src/types\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { getCountries } from \"./store/countrySlice\";\n\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport SelectedCountries from \"./components/SelectedCountries\";\n\nconst regions: Region[] = [\n  { value: \"Africa\" },\n  { value: \"Americas\" },\n  { value: \"Asia\" },\n  { value: \"Europe\" },\n  { value: \"Oceania\" },\n];\n\nconst App: React.FC = () => {\n  const { countriesList, loading, error } = useFetch(\n    \"https://restcountries.com/v2/all/\"\n  );\n\n  const dispatch = useDispatch();\n  dispatch(getCountries(countriesList));\n\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  console.log(selectedRegion);\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Countries App </p>\n        </header>\n        {loading && <p>Loading data... Please wait</p>}\n        {error && <p>Ops...</p>}\n        <section className=\"selection\">\n          <Select\n            placeholder={\"Please select a region of the globe ...\"}\n            options={regions}\n            defaultMenuIsOpen={true}\n            getOptionLabel={(regions) => regions.value}\n            onChange={(opt) => setSelectedRegion(opt.value)}\n          />\n        </section>\n        {selectedRegion && <Countries selectedRegion={selectedRegion} />}\n        <SelectedCountries />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n\n// function App() {\n//   const [selectedRegion, setSelectedRegion] = useState(\"\");\n//   console.log(selectedRegion);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p>Countries App </p>\n//       </header>\n//       <section className=\"selection\">\n//         <Select\n//           placeholder={\"Please select a region of the globe ...\"}\n//           options={regions}\n//           defaultMenuIsOpen={true}\n//           getOptionLabel={(regions) => regions.value}\n//           onChange={(opt) => setSelectedRegion(opt.value)}\n//         />\n//       </section>\n//     </div>\n//   );\n// }\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;AAEA,MAAMC,OAAiB,GAAG,CACxB;EAAEC,KAAK,EAAE;AAAT,CADwB,EAExB;EAAEA,KAAK,EAAE;AAAT,CAFwB,EAGxB;EAAEA,KAAK,EAAE;AAAT,CAHwB,EAIxB;EAAEA,KAAK,EAAE;AAAT,CAJwB,EAKxB;EAAEA,KAAK,EAAE;AAAT,CALwB,CAA1B;;AAQA,MAAMC,GAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAAEC,aAAF;IAAiBC,OAAjB;IAA0BC;EAA1B,IAAoCT,QAAQ,CAChD,mCADgD,CAAlD;EAIA,MAAMU,QAAQ,GAAGb,WAAW,EAA5B;EACAa,QAAQ,CAACT,YAAY,CAACM,aAAD,CAAb,CAAR;EAEA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;EACAiB,OAAO,CAACC,GAAR,CAAYH,cAAZ;EAEA,oBACE,QAAC,QAAD;IAAU,KAAK,EAAEI,KAAjB;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EAIGP,OAAO,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJd,EAKGC,KAAK,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALZ,eAME;QAAS,SAAS,EAAC,WAAnB;QAAA,uBACE,QAAC,MAAD;UACE,WAAW,EAAE,yCADf;UAEE,OAAO,EAAEL,OAFX;UAGE,iBAAiB,EAAE,IAHrB;UAIE,cAAc,EAAGA,OAAD,IAAaA,OAAO,CAACC,KAJvC;UAKE,QAAQ,EAAGW,GAAD,IAASJ,iBAAiB,CAACI,GAAG,CAACX,KAAL;QALtC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,EAeGM,cAAc,iBAAI,QAAC,SAAD;QAAW,cAAc,EAAEA;MAA3B;QAAA;QAAA;QAAA;MAAA,QAfrB,eAgBE,QAAC,iBAAD;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAjCD;;GAAML,G;UACsCN,Q,EAIzBH,W;;;KALbS,G;AAmCN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}