{"ast":null,"code":"var _jsxFileName = \"/Users/carolina/REACT/Exerci\\u0301cio 2/ex2-countries-app/src/components/CountriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Country from \"./Country\";\nimport \"./CountriesList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountriesList = props => {\n  _s();\n\n  const {\n    countries,\n    selectedRegion,\n    selectCountry\n  } = props;\n  let searchRegion = selectedRegion;\n  const [searchedKw, setSearchedKw] = useState(\"\"); //if user change region -> then reconsider search\n\n  useEffect(() => {\n    setSearchedKw(\"\");\n  }, [searchRegion]); //get input.value and set it to setSearchedKW\n\n  const searchHandler = e => {\n    const searchedTerm = e.target.value;\n    setSearchedKw(searchedTerm);\n  };\n\n  let foundCountries = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search-form\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        value: searchedKw,\n        onChange: searchHandler,\n        className: \"input\",\n        placeholder: \" \\uD83D\\uDD0D Search a specfic country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"countries-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [countries && countries.length > 0 && (foundCountries = countries.filter(country => {\n          return searchedKw === \"\" || country.name.toLowerCase().startsWith(searchedKw.toLowerCase());\n        }).map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"countries-list\",\n          children: /*#__PURE__*/_jsxDEV(Country, {\n            country: country,\n            selectCountry: selectCountry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, country.countryCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this))), foundCountries.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Not Found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountriesList, \"KYczwY+tGLjhWo43rKvem2hMXZw=\");\n\n_c = CountriesList;\nexport default CountriesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"names":["useEffect","useState","Country","CountriesList","props","countries","selectedRegion","selectCountry","searchRegion","searchedKw","setSearchedKw","searchHandler","e","searchedTerm","target","value","foundCountries","length","filter","country","name","toLowerCase","startsWith","map","countryCode"],"sources":["/Users/carolina/REACT/ExerciÃÅcio 2/ex2-countries-app/src/components/CountriesList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Country from \"./Country\";\nimport { ICountry } from \"../types\";\nimport \"./CountriesList.css\";\n\ninterface Props {\n  countries: ICountry[];\n  selectedRegion?: string;\n  selectCountry: string;\n}\n\nconst CountriesList: React.FC<Props> = (props) => {\n  const { countries, selectedRegion, selectCountry } = props;\n  let searchRegion = selectedRegion;\n  const [searchedKw, setSearchedKw] = useState(\"\");\n  //if user change region -> then reconsider search\n  useEffect(() => {\n    setSearchedKw(\"\");\n  }, [searchRegion]);\n\n  //get input.value and set it to setSearchedKW\n\n  const searchHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    const searchedTerm = (e.target as HTMLInputElement).value;\n    setSearchedKw(searchedTerm);\n  };\n\n  let foundCountries = [];\n\n  return (\n    <>\n      <section className=\"search-form\">\n        <input\n          type=\"search\"\n          value={searchedKw}\n          onChange={searchHandler}\n          className=\"input\"\n          placeholder=\" üîç Search a specfic country:\"\n        />\n      </section>\n      <section className=\"countries-list\">\n        {\n          <div className=\"list-container\">\n            {countries &&\n              countries.length > 0 &&\n              (foundCountries = countries\n                .filter((country) => {\n                  return (\n                    searchedKw === \"\" ||\n                    country.name\n                      .toLowerCase()\n                      .startsWith(searchedKw.toLowerCase())\n                  );\n                })\n                .map((country) => (\n                  <li key={country.countryCode} className=\"countries-list\">\n                    <Country country={country} selectCountry={selectCountry} />\n                  </li>\n                )))}\n\n            {foundCountries.length === 0 && <h2>Not Found!</h2>}\n          </div>\n        }\n      </section>\n    </>\n  );\n};\n\nexport default CountriesList;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,qBAAP;;;;AAQA,MAAMC,aAA8B,GAAIC,KAAD,IAAW;EAAA;;EAChD,MAAM;IAAEC,SAAF;IAAaC,cAAb;IAA6BC;EAA7B,IAA+CH,KAArD;EACA,IAAII,YAAY,GAAGF,cAAnB;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAHgD,CAIhD;;EACAD,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,EAAD,CAAb;EACD,CAFQ,EAEN,CAACF,YAAD,CAFM,CAAT,CALgD,CAShD;;EAEA,MAAMG,aAAa,GAAIC,CAAD,IAA0C;IAC9D,MAAMC,YAAY,GAAID,CAAC,CAACE,MAAH,CAA+BC,KAApD;IACAL,aAAa,CAACG,YAAD,CAAb;EACD,CAHD;;EAKA,IAAIG,cAAc,GAAG,EAArB;EAEA,oBACE;IAAA,wBACE;MAAS,SAAS,EAAC,aAAnB;MAAA,uBACE;QACE,IAAI,EAAC,QADP;QAEE,KAAK,EAAEP,UAFT;QAGE,QAAQ,EAAEE,aAHZ;QAIE,SAAS,EAAC,OAJZ;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAS,SAAS,EAAC,gBAAnB;MAAA,uBAEI;QAAK,SAAS,EAAC,gBAAf;QAAA,WACGN,SAAS,IACRA,SAAS,CAACY,MAAV,GAAmB,CADpB,KAEED,cAAc,GAAGX,SAAS,CACxBa,MADe,CACPC,OAAD,IAAa;UACnB,OACEV,UAAU,KAAK,EAAf,IACAU,OAAO,CAACC,IAAR,CACGC,WADH,GAEGC,UAFH,CAEcb,UAAU,CAACY,WAAX,EAFd,CAFF;QAMD,CARe,EASfE,GATe,CASVJ,OAAD,iBACH;UAA8B,SAAS,EAAC,gBAAxC;UAAA,uBACE,QAAC,OAAD;YAAS,OAAO,EAAEA,OAAlB;YAA2B,aAAa,EAAEZ;UAA1C;YAAA;YAAA;YAAA;UAAA;QADF,GAASY,OAAO,CAACK,WAAjB;UAAA;UAAA;UAAA;QAAA,QAVc,CAFnB,CADH,EAkBGR,cAAc,CAACC,MAAf,KAA0B,CAA1B,iBAA+B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAlBlC;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA,gBADF;AAqCD,CAvDD;;GAAMd,a;;KAAAA,a;AAyDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}